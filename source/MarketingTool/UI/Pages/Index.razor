@page "/"

@inject NavigationManager _navigationManager
@inject IAuthenticationService AuthenticationService

<div class="container text-center">
    <EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
        <label For="EmailField">Email Address</label>
        <InputText id="EmailField" type="email" @bind-Value="loginRequest.EmailAddress" />
        <label For="PasswordField">Password</label>
        <InputText id="PasswordField" type="password" @bind-Value="loginRequest.Password" />
        <button type="submit" class="btn btn-primary">Login</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
    @if (!string.IsNullOrEmpty(Error))
    {
        <p class="text-center text-danger">@Error</p>
    }

    <p>Forgotten your password? Click <NavLink href="/forgottenpassword">Here</NavLink></p>
    <p>Not registered yet? Sign up <NavLink href="/register">Here</NavLink></p>
</div>

@code {

        LoginViewModel loginRequest = new LoginViewModel();

    private string Error { get; set; }

    protected override void OnInitialized()
    {
        if (AuthenticationService.User != null)
        {
            _navigationManager.NavigateTo("Dashboard");
        }
    }

    private async void HandleLogin()
    {
        try
        {
            await AuthenticationService.Login(loginRequest);
            var returnUrl = _navigationManager.QueryString("returnUrl") ?? "/dashboard";
            _navigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            Error = ex.Message;
            StateHasChanged();
        }
    }


} 