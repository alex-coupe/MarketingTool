@page "/resetpassword/{Token}"

@inject IDataService<ResetPasswordViewModel> _resetPasswordService

<div class="container text-center">
    <h3>Reset Password</h3>
    @if (!ResetComplete)
    {

    <EditForm Model="ViewModel" OnValidSubmit="HandleResetPassword">
        <label>Enter Your New Password</label>
        <InputText type="password" @bind-Value="ViewModel.Password" />
        <label>Confirm Your New Password</label>
        <InputText type="password" @bind-Value="ViewModel.ConfirmPassword" />
        <button type="submit" class="btn btn-primary">Reset Password</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
    }
</div>

@if (!string.IsNullOrEmpty(Error))
{
    <p>@Error</p>
}

@if (ResetComplete)
{
    <p class="text-success">Password Reset Successfully!</p>
}


@code {
    [Parameter]
    public string Token { get; set; }

    private bool ResetComplete { get; set; } = false;

    private string Error { get; set; }

    ResetPasswordViewModel ViewModel = new ResetPasswordViewModel();


    private async Task HandleResetPassword()
    {
        try
        {
            ViewModel.Token = Token;
            await _resetPasswordService.PostNoReturnContent(ViewModel);
            ResetComplete = true;
            ViewModel = null;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
            StateHasChanged();
        }
    }


}
