@page "/campaigns/edit/{Id:int}"
@attribute [Authorize]

@inject NavigationManager _navigationManager
@inject IAuthenticationService AuthenticationService
@inject IDataService<ListViewModel> _listService
@inject IDataService<CampaignViewModel> _campaignService
@inject IDataService<TemplateViewModel> _templateService

<h3>Edit Campaign</h3>
<div class="container text-center">
    @if (!Loading)
    {
        <EditForm Model="campaignViewModel" OnValidSubmit="HandleSubmit">
            <label>Campaign Name</label>
            <InputText type="text" @bind-Value="campaignViewModel.Name" />
            <label>Description</label>
            <InputText type="text" @bind-Value="campaignViewModel.Description" />
            <label>Subject</label>
            <InputText type="text" @bind-Value="campaignViewModel.Subject" />
            <InputSelect @bind-Value="campaignViewModel.TemplateId">
                <option value="">Select template ...</option>
                @foreach (var template in templateViewModels)
                    {
                    <option value="@template.Id">@template.Name</option>
                    }
            </InputSelect>
            <InputSelect @bind-Value="campaignViewModel.ListId">
                <option value="">Select list ...</option>
                @foreach (var list in listViewModels)
                    {
                    <option value="@list.Id">@list.Name</option>
                    }
            </InputSelect>
            <label>Sending Email</label>
            <InputText type="email" @bind-Value="campaignViewModel.SenderEmail" />
            <label>Sending Date</label>
            <InputDate @bind-Value="campaignViewModel.SendDate" />
            <label>Active</label>
            <InputCheckbox @bind-Value="campaignViewModel.IsActive" />
            <button type="submit" class="btn btn-primary">Save</button>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    }
    else
    {
        <p>Loading...</p>
    }

    @if (Saved)
    {
        <p class="text-center text-success">Saved Successfully!</p>
    }

    <p>@Error</p>

    <button class="btn btn-danger" @onclick="@HandleDelete">Delete Campaign</button>

</div>
@code {
    [Parameter]
    public int Id { get; set; }

    private string Error { get; set; }

    private bool Loading { get; set; } = true;

    private bool Saved { get; set; } = false;

    IEnumerable<ListViewModel> listViewModels = new List<ListViewModel>();
    IEnumerable<TemplateViewModel> templateViewModels = new List<TemplateViewModel>();

    CampaignViewModel campaignViewModel = new CampaignViewModel();

    protected override async Task OnInitializedAsync()
    {

        try
        {
            listViewModels = await _listService.GetAll();
            templateViewModels = await _templateService.GetAll();
            campaignViewModel = await _campaignService.Get(Id);
            Loading = false;

        }
        catch (Exception ex)
        {
            Error = ex.Message;
            Loading = false;
        }

    }

    public async Task HandleSubmit()
    {
        campaignViewModel.ModifyingUser = AuthenticationService.User.UserId.ToString();
        campaignViewModel.ModifiedDate = DateTime.Now;
        try
        {
            await _campaignService.Put(campaignViewModel);
            Saved = true;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

    public async Task HandleDelete()
    {
        try
        {
            await _campaignService.Remove(Id);
            Saved = true;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }
}
