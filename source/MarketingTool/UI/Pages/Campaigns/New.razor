@page "/campaigns/new"

@attribute [Authorize]

@inject NavigationManager _navigationManager
@inject IAuthenticationService AuthenticationService
@inject IDataService<ListViewModel> _listService
@inject IDataService<CampaignViewModel> _campaignService
@inject IDataService<TemplateViewModel> _templateService

<h3>New Campaign</h3>
<div class="container text-center">
    @if (!Loading)
    {
    <EditForm Model="campaignViewModel" OnValidSubmit="HandleSubmit">
        <label>Campaign Name</label>
        <InputText type="text" @bind-Value="campaignViewModel.Name" />
        <label>Description</label>
        <InputText type="text" @bind-Value="campaignViewModel.Description" />
        <label>Subject</label>
        <InputText type="text" @bind-Value="campaignViewModel.Subject" />
        <InputSelect @bind-Value="campaignViewModel.TemplateId">
            <option value="">Select template ...</option>
            @foreach (var template in templateViewModels)
                {
                <option value="@template.Id">@template.Name</option>
                }
        </InputSelect>
        <InputSelect @bind-Value="campaignViewModel.ListId">
            <option value="">Select list ...</option>
            @foreach (var list in listViewModels)
                {
                <option value="@list.Id">@list.Name</option>
                }
        </InputSelect>
        <label>Sending Email</label>
        <InputText type="email" @bind-Value="campaignViewModel.SenderEmail" />
        <label>Sending Date</label>
        <InputDate @bind-Value="campaignViewModel.SendDate" />
        <label>Active</label>
        <InputCheckbox @bind-Value="campaignViewModel.IsActive" />
        <button type="submit" class="btn btn-primary">Save</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
    }
    else
    {
        <p>Loading...</p>
    }

    @if (Saved)
    {
        <p class="text-center text-success">Saved Successfully!</p>
    }

    <p>@Error</p>

</div>
@code {
    private string Error { get; set; }

    public bool Loading { get; set; } = false;

    public bool Saved { get; set; } = false;

    IEnumerable<ListViewModel> listViewModels = new List<ListViewModel>();
    IEnumerable<TemplateViewModel> templateViewModels = new List<TemplateViewModel>();

    CampaignViewModel campaignViewModel = new CampaignViewModel();


    public async Task HandleSubmit()
    {

        try
        {

            campaignViewModel.CreatedDate = DateTime.Now;
            await _campaignService.Post(campaignViewModel);
            Saved = true;
            campaignViewModel = new CampaignViewModel();
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {

        try
        {
            listViewModels = await _listService.GetAll();
            templateViewModels = await _templateService.GetAll();
            campaignViewModel.CreatingUser = AuthenticationService.User.UserId.ToString();
            Loading = false;

        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }
}

