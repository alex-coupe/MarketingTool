@page "/dashboard"
@attribute [Authorize]
@inject IAuthenticationService AuthenticationService
@inject IDataService<DashboardViewModel> _dashboardService
<h3>Dashboard</h3>

<h3>Hi @AuthenticationService.User.Name</h3>

@if (IsLoading)
{
    <p>Loading....</p>
}
else
{
<p>
    <NavLink class="btn btn-primary" href="/recipients">Recipients Total Recipients: @viewModel.RecipientCount</NavLink>
    <NavLink class="btn btn-primary" href="/lists">Lists Total Lists: @viewModel.ListCount</NavLink>
    <NavLink class="btn btn-primary" href="/campaigns">Campaigns Total Campaigns: @viewModel.TotalCampaigns Active Campaigns: @viewModel.ActiveCampaigns</NavLink>
    <NavLink class="btn btn-primary" href="/templates">Templates Total Templates: @viewModel.TotalTemplates</NavLink>
    <NavLink class="btn btn-primary" href="/analytics">Analytics</NavLink>
    <NavLink class="btn btn-primary" href="/administration">Administration </NavLink>
</p>

<p>@Error</p>
}

@code {

    private string Error { get; set; }

    private bool IsLoading { get; set; } = true;

    DashboardViewModel viewModel = new DashboardViewModel();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            viewModel = await _dashboardService.GetSingle();
            IsLoading = false;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
            IsLoading = false;
        }

    }
}
